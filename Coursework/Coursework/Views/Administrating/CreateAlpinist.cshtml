@model Coursework.Models.Alpinist

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Alpinists</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Альпіністська База</label>
            <div class="col-md-10">


                @{
                    var queryString = "SELECT " +
                        "[AlpinistBaseID]," +
                        "[Country]" +
                        "FROM [AlpinistBases] AS [AB] " +
                        "ORDER BY [Country]";
                    var connection = new System.Data.SqlClient.SqlConnection(@"Data Source = VALENTINE\SQLEXPRESS;
                        Initial Catalog = Coursework; Integrated Security = True");
                    connection.Open();
                    System.Data.SqlClient.SqlCommand command = new System.Data.SqlClient.SqlCommand(queryString, connection);
                    System.Data.SqlClient.SqlDataReader reader = command.ExecuteReader();
                    List<Coursework.Models.Route> list = new List<Coursework.Models.Route>();
                    while (reader.Read())
                    {
                        Object[] values = new Object[reader.FieldCount];
                        reader.GetValues(values);
                        Coursework.Models.Route route = new Coursework.Models.Route();
                        route.RouteID = Convert.ToInt32(values[0]);
                        route.Name = Convert.ToString(values[1]);
                        list.Add(route);
                    }
                    connection.Close();

                    SelectList list2 = new SelectList(list, "RouteID", "Name");

                    @Html.DropDownListFor(model => Model.AlpinistBaseID, list2, htmlAttributes: new { @class = "form-control" })
                }

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
