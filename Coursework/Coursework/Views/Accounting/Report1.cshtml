@model Coursework.Models.Date

@{
    ViewBag.Title = "Звіт замовлень альпіністів";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="row content">
            <div class="col-sm-3 sidenav hidden-xs hidden-sm">
                <h2>Бухгалтерський облік</h2>
                <ul class="nav nav-pills nav-stacked">
                    <li>@Html.ActionLink("Загальна інформація", "Index", "Accounting")</li>
                    <li class="active">@Html.ActionLink("Замовлення альпіністів", "Report1", "Accounting")</li>
                    <li>@Html.ActionLink("Прибуток по альпіністам", "Report2", "Accounting")</li>
                    <li>@Html.ActionLink("Прибуток по типам послуг", "Report3", "Accounting")</li>
                </ul><br>
            </div>
            <br>

            <div class="col-sm-9">
                <h2>Звіт</h2>
                <br />
                <p class="my-p">
                    Виводить всі замовлення за певний період
                </p>
                <br />
                <div class="form-horizontal">
                    <h4>Введіть дані для звіту:</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateStart, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Згенерувати звіт" class="btn btn-default" />
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    if (IsPost)
    {
        var queryString = "SELECT " +
            "[FirstName], " +
            "[LastName], " +
            "[DateStart], " +
            "[DateEnd], " +
            "[HT].[Name], " +
            "[Price]*(DateDiff(DD,[DateStart],[DateEnd])+1) AS [Price] " +
            "FROM [HouseOrders] AS [HO] " +
            "JOIN [Alpinists] AS [A] " +
            "ON [A].[AlpinistID] = [HO].[AlpinistID] " +
            "JOIN [Houses] AS [H] " +
            "ON [HO].[HouseID] = [H].[HouseID] " +
            "JOIN [HouseTypes] AS [HT] " +
            "ON [H].[HouseTypeID] = [HT].[HouseTypeID] " +
            "WHERE ( [DateStart] BETWEEN '" +
            Model.DateStart.ToString("yyyy-MM-dd") +
            "' AND '" +
            Model.DateEnd.ToString("yyyy-MM-dd") +
            "') AND ([DateEnd] BETWEEN '" +
            Model.DateStart.ToString("yyyy-MM-dd") +
            "' AND '" +
            Model.DateEnd.ToString("yyyy-MM-dd") +
            "') " +
            "UNION " +
            "SELECT" +
            "[FirstName], " +
            "[LastName], " +
            "[Date] AS [DateStart], " +
            "null AS [DateEnd], " +
            "[Name], " +
            "[Price] " +
            "FROM [FoodOrders] AS [FO] " +
            "JOIN [Alpinists] AS [A] ON [A].[AlpinistID] = [FO].[AlpinistID] " +
            "JOIN [FoodTypes] AS [FT] " +
            "ON [FO].[FoodTypeID] = [FT].[FoodTypeID] " +
            "WHERE ([Date] BETWEEN '" +
            Model.DateStart.ToString("yyyy-MM-dd") +
            "' AND '" +
            Model.DateEnd.ToString("yyyy-MM-dd") +
            "')ORDER BY [DateStart]";
        var connection = new System.Data.SqlClient.SqlConnection(@"Data Source = VALENTINE\SQLEXPRESS; Initial Catalog = Coursework; Integrated Security = True");
        connection.Open();
        System.Data.SqlClient.SqlCommand command = new System.Data.SqlClient.SqlCommand(queryString, connection);
        System.Data.SqlClient.SqlDataReader reader = command.ExecuteReader();

        List<Object[]> list = new List<Object[]>();
        while (reader.Read())
        {
            Object[] values = new Object[reader.FieldCount];
            reader.GetValues(values);
            list.Add(values);
        }
        connection.Close();
        var sum = 0;
        foreach (Object[] element in list)
        {
            sum += Convert.ToInt32(element[5]);
        }
        <br />
        <br />
        <h4 align = "center" class = "my-th">Загальний прибуток: @sum₴</h4>
        <br />
        <br />
        <br />
        <table class="table">
            <tbody>
                <tr>
                    <th class="my-th">Ім'я</th>
                    <th class="my-th">Прізвище</th>
                    <th class="my-th">Початкова дата</th>
                    <th class="my-th">Кінцева дата</th>
                    <th class="my-th">Тип послуги</th>
                    <th class="my-th">Ціна</th>
                </tr>
                @{
                    foreach (Object[] element in list)
                    {
                        <tr>
                            <th>@element[0]</th>
                            <th>@element[1]</th>
                            <th>@element[2]</th>
                            <th>@element[3]</th>
                            <th>@element[4]</th>
                            <th>@element[5]₴</th>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}