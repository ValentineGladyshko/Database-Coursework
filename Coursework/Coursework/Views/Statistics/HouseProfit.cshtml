@{
    ViewBag.Title = "Проживання";
}

@{
    DateTime DateStart = new DateTime(DateTime.Today.Year, 1, 1);
    DateTime DateEnd = new DateTime(DateTime.Today.Year, 12, 31);

    string[] HouseTypes = new string[] { "Будинок", "Намет" };
    string[] Countries = new string[] { "Грузія", "Росія", "Киргизстан" };

    int[] sum1_1 = new int[2];
    int[] sum1_2 = new int[3];
    int[,] sum2_1 = new int[4, 2];
    int[,] sum2_2 = new int[3, 2];

    Object[] values = new Object[1];

    var connection = new System.Data.SqlClient.SqlConnection(@"Data Source = VALENTINE\SQLEXPRESS;
        Initial Catalog = Coursework; Integrated Security = True");
    var queryString = "SELECT * FROM [AlpinistBases]";

    connection.Open();
    System.Data.SqlClient.SqlCommand command = new System.Data.SqlClient.SqlCommand(queryString, connection);
    System.Data.SqlClient.SqlDataReader reader = command.ExecuteReader();
    connection.Close();

    for (int i = 0; i < 2; i++)
    {
        queryString = "SELECT " +
            "	SUM([Price]*(DateDiff(DD,[DateStart],[DateEnd])+1)) AS [Profit] " +
            "FROM [HouseOrders] AS [HO] " +
            "JOIN [Houses] AS [H] " +
            "	ON [HO].[HouseID] = [H].[HouseID] " +
            "JOIN [HouseTypes] AS [HT] " +
            "	ON [H].[HouseTypeID] = [HT].[HouseTypeID] " +
            "WHERE ([DateStart] BETWEEN '" +
            DateStart.ToString("yyyy-MM-dd") + "' AND '" +
            DateEnd.ToString("yyyy-MM-dd") + "') " +
            "AND ([DateEnd] BETWEEN '" +
            DateStart.ToString("yyyy-MM-dd") + "' AND '" +
            DateEnd.ToString("yyyy-MM-dd") + "') AND ([HT].[Name] = '" +
            HouseTypes[i] +
            "')";

        connection.Open();
        command = new System.Data.SqlClient.SqlCommand(queryString, connection);
        reader = command.ExecuteReader();
        reader.Read();
        reader.GetValues(values);
        sum1_1[i] = 0;
        if (!DBNull.Value.Equals(values[0]))
        {
            sum1_1[i] = Convert.ToInt32(values[0]);
        }
        connection.Close();
    }

    for (int i = 0; i < 3; i++)
    {
        queryString = "SELECT " +
            "	SUM([Price]*(DateDiff(DD,[DateStart],[DateEnd])+1)) AS [Profit] " +
            "FROM [HouseOrders] AS [HO] " +
            "JOIN [Houses] AS [H] " +
            "	ON [HO].[HouseID] = [H].[HouseID] " +
            "JOIN [AlpinistBases] AS [AB] " +
            "	ON [H].[AlpinistBaseID] = [AB].[AlpinistBaseID] " +
            "JOIN [HouseTypes] AS [HT] " +
            "	ON [H].[HouseTypeID] = [HT].[HouseTypeID] " +
            "WHERE ([DateStart] BETWEEN '" +
            DateStart.ToString("yyyy-MM-dd") + "' AND '" +
            DateEnd.ToString("yyyy-MM-dd") + "') " +
            "AND ([DateEnd] BETWEEN '" +
            DateStart.ToString("yyyy-MM-dd") + "' AND '" +
            DateEnd.ToString("yyyy-MM-dd") + "') AND ([AB].[Country] = '" +
            Countries[i] +
            "')";

        connection.Open();
        command = new System.Data.SqlClient.SqlCommand(queryString, connection);
        reader = command.ExecuteReader();
        reader.Read();
        reader.GetValues(values);
        sum1_2[i] = 0;
        if (!DBNull.Value.Equals(values[0]))
        {
            sum1_2[i] = Convert.ToInt32(values[0]);
        }
        connection.Close();
    }

    DateEnd = DateStart;
    DateStart = DateStart.AddMonths(-3);

    for (int i = 0; i < 4; i++)
    {
        DateStart = DateStart.AddMonths(3);
        DateEnd = DateEnd.AddMonths(3);
        for (int j = 0; j < 2; j++)
        {

            queryString = "SELECT " +
                "	SUM([Price]*(DateDiff(DD,[DateStart],[DateEnd])+1)) AS [Profit] " +
                "FROM [HouseOrders] AS [HO] " +
                "JOIN [Houses] AS [H] " +
                "	ON [HO].[HouseID] = [H].[HouseID] " +
                "JOIN [HouseTypes] AS [HT] " +
                "	ON [H].[HouseTypeID] = [HT].[HouseTypeID] " +
                "WHERE ([DateStart] BETWEEN '" +
                DateStart.ToString("yyyy-MM-dd") + "' AND '" +
                DateEnd.ToString("yyyy-MM-dd") + "') " +
                "AND ([DateEnd] BETWEEN '" +
                DateStart.ToString("yyyy-MM-dd") + "' AND '" +
                DateEnd.ToString("yyyy-MM-dd") + "') AND ([HT].[Name] = '" +
                HouseTypes[j] +
                "')";

            connection.Open();
            command = new System.Data.SqlClient.SqlCommand(queryString, connection);
            reader = command.ExecuteReader();
            reader.Read();
            reader.GetValues(values);
            sum2_1[i, j] = 0;
            if (!DBNull.Value.Equals(values[0]))
            {
                sum2_1[i, j] = Convert.ToInt32(values[0]);
            }
            connection.Close();
        }
    }

    DateStart = new DateTime(DateTime.Today.Year, 1, 1);
    DateEnd = new DateTime(DateTime.Today.Year, 12, 31);

    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 2; j++)
        {

            queryString = "SELECT " +
                "	SUM([Price]*(DateDiff(DD,[DateStart],[DateEnd])+1)) AS [Profit] " +
                "FROM [HouseOrders] AS [HO] " +
                "JOIN [Houses] AS [H] " +
                "	ON [HO].[HouseID] = [H].[HouseID] " +
                "JOIN [AlpinistBases] AS [AB] " +
                "	ON [H].[AlpinistBaseID] = [AB].[AlpinistBaseID] " +
                "JOIN [HouseTypes] AS [HT] " +
                "	ON [H].[HouseTypeID] = [HT].[HouseTypeID] " +
                "WHERE ([DateStart] BETWEEN '" +
                DateStart.ToString("yyyy-MM-dd") + "' AND '" +
                DateEnd.ToString("yyyy-MM-dd") + "') " +
                "AND ([DateEnd] BETWEEN '" +
                DateStart.ToString("yyyy-MM-dd") + "' AND '" +
                DateEnd.ToString("yyyy-MM-dd") + "') AND ([AB].[Country] = '" +
                Countries[i] +
                "') AND ([HT].[Name] = '" +
                HouseTypes[j] +
                "')";

            connection.Open();
            command = new System.Data.SqlClient.SqlCommand(queryString, connection);
            reader = command.ExecuteReader();
            reader.Read();
            reader.GetValues(values);
            sum2_2[i, j] = 0;
            if (!DBNull.Value.Equals(values[0]))
            {
                sum2_2[i, j] = Convert.ToInt32(values[0]);
            }
            connection.Close();
        }
    }
}

<div class="container-fluid">
    <div class="row content">
        <div class="col-sm-3 sidenav hidden-xs hidden-sm">
            <h2>Статистика</h2>
            <ul class="nav nav-pills nav-stacked">
                <li>@Html.ActionLink("Загальний прибуток", "Index", "Statistics")</li>
                <li class="active">@Html.ActionLink("Проживання", "HouseProfit", "Statistics")</li>
                <li>@Html.ActionLink("Харчування", "FoodProfit", "Statistics")</li>
                <li>@Html.ActionLink("Альпіністські Бази", "BaseProfit", "Statistics")</li>
            </ul><br>
        </div>
        <br>

        <div class="col-sm-9">
            <div class="well">
                <h4>Прибуток за проживання</h4>
                <canvas id="doughnut-chart" width="808" height="300"></canvas>
                <script src="~/Scripts/Chart.js"></script>
                <script>
                    new Chart(document.getElementById("doughnut-chart"), {
                        type: 'doughnut',
                        data: {
                            labels: ["Будинки (грн.)", "Намети (грн.)"],
                            datasets: [
                                {
                                    backgroundColor: ["#2ecc71", "#f1c40f"],
                                    data: [@sum1_1[0], @sum1_1[1]]
                                }
                            ]
                        },
                        options: {
                            title: {
                                display: true,
                                text: 'Прибуток за проживання за поточний рік (по типам)'
                            }
                        }
                    });
                </script>
            </div>
            <div class="well">
                <h4>Графік Прибутку</h4>
                <canvas id="bar-chart-grouped" width="808" height="400"></canvas>
                <script src="~/Scripts/Chart.js"></script>
                <script>
                    new Chart(document.getElementById("bar-chart-grouped"), {
                        type: 'bar',
                        data: {
                            labels: ["Січень - Березень", "Квітень - Червень", "Липень - Вересень", "Жовтень - Грудень"],
                            datasets: [
                                {
                                    label: "Будинки (грн.)",
                                    backgroundColor: "#2ecc71",
                                    data: [@sum2_1[0, 0], @sum2_1[1, 0], @sum2_1[2, 0], @sum2_1[3, 0]]
                                }, {
                                    label: "Намети (грн.)",
                                    backgroundColor: "#f1c40f",
                                    data: [@sum2_1[0, 1], @sum2_1[1, 1], @sum2_1[2, 1], @sum2_1[3, 1]]
                                }
                            ]
                        },
                        options: {
                            title: {
                                display: true,
                                text: 'Прибуток'
                            },
                            scales: {
                                xAxes: [{
                                    stacked: true
                                }],
                                yAxes: [{
                                    stacked: true
                                }]
                            }
                        }
                    });
                </script>
            </div>
            <div class="well">
                <h4>Прибуток за проживання</h4>
                <canvas id="doughnut-chart1" width="808" height="300"></canvas>
                <script src="~/Scripts/Chart.js"></script>
                <script>
                    new Chart(document.getElementById("doughnut-chart1"), {
                        type: 'doughnut',
                        data: {
                            labels: ["Грузія (грн.)", "Росія (грн.)", "Киргизстан (грн.)"],
                            datasets: [
                                {
                                    backgroundColor: ["#2ecc71", "#f1c40f", "#e74c3c"],
                                    data: [@sum1_2[0], @sum1_2[1], @sum1_2[2]]
                                }
                            ]
                        },
                        options: {
                            title: {
                                display: true,
                                text: 'Прибуток за проживання за поточний рік (по Альпіністським Базам)'
                            }
                        }
                    });
                </script>
            </div>
            <div class="well">
                <h4>Альпіністська База - Проживання</h4>
                <canvas id="bar-chart-grouped1" width="808" height="400"></canvas>
                <script src="~/Scripts/Chart.js"></script>
                <script>
                    new Chart(document.getElementById("bar-chart-grouped1"), {
                        type: 'bar',
                        data: {
                            labels: ["Грузія", "Росія", "Киргизстан"],
                            datasets: [
                                {
                                    label: "Будинки (грн.)",
                                    backgroundColor: "#2ecc71",
                                    data: [@sum2_2[0, 0], @sum2_2[1, 0], @sum2_2[2, 0]]
                                }, {
                                    label: "Намети (грн.)",
                                    backgroundColor: "#f1c40f",
                                    data: [@sum2_2[0, 1], @sum2_2[1, 1], @sum2_2[2, 1]]
                                }
                            ]
                        },
                        options: {
                            title: {
                                display: true,
                                text: 'Альпіністська База'
                            },
                            scales: {
                                xAxes: [{
                                    stacked: true
                                }],
                                yAxes: [{
                                    stacked: true
                                }]
                            }
                        }
                    });
                </script>
            </div>
        </div>
    </div>
</div>